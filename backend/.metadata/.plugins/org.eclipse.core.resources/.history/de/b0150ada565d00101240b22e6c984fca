package com.example.board.domain.post;

import org.springframework.http.ResponseEntity;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.example.board.security.jwt.CustomUserDetails; 

import com.example.board.domain.post.dto.PostDetailRes;
import com.example.board.domain.post.dto.PostReq;
import com.example.board.exception.ApiResponse;

import lombok.RequiredArgsConstructor;


@RestController
@RequestMapping("/api") 
@RequiredArgsConstructor
public class PostController {
	private final PostService postService;
	
	//게시글생성
	@PostMapping("/posts")
	public ResponseEntity<ApiResponse<Long>> createPost(
	        @RequestBody PostReq postReq,
	        @AuthenticationPrincipal CustomUserDetails userDetails) {

	    //받아온 userDetails 객체에서 이메일을 추출
		String email = userDetails.getMember().getEmail();

	    //서비스 호출 
	    Long postId = postService.create(postReq, email);

	    //생성된 게시글의 ID를 반환
	    return ResponseEntity.ok(ApiResponse.success("게시글 생성 성공", postId));
	}
	
	
	//게시글 ID로 상세 조회
	@GetMapping("/posts/{postId}")
	public ResponseEntity<ApiResponse<PostDetailRes>> getPost(
	        @PathVariable Long postId,
	        @AuthenticationPrincipal CustomUserDetails userDetails) {

	    PostDetailRes postDetail = postService.findPostDetail(postId, userDetails.getMember().getEmail());
	    return ResponseEntity.ok(ApiResponse.success("게시글 조회 성공", postDetail));
	}
	
	
	 

}
