package com.example.board.domain.post;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.example.board.domain.member.Member;
import com.example.board.domain.member.MemberRepository;
import com.example.board.domain.post.dto.PostReq;
import com.example.board.exception.CustomException;
import com.example.board.exception.ErrorCode;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class PostService {
	private final PostRepository postRepository;
	private final MemberRepository memberRepository;
	
	@Transactional
	public Long createPost(PostReq postReq, String email) {
	    // 1. 작성자 정보 조회 (서비스의 책임)
	    Member member = memberRepository.findByEmail(email)
	            .orElseThrow(() -> new CustomException(ErrorCode.USER_NOT_FOUND, "해당 사용자를 찾을 수 없습니다."));

	    // 2. DTO에게 엔티티 생성을 위임
	    Post post = postReq.toEntity(member);

	    // 3. 데이터베이스에 저장
	    Post savedPost = postRepository.save(post);
	    return savedPost.getId();
	}

	
}
