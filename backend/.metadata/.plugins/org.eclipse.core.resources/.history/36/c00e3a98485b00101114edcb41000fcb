package com.example.board.security.jwt;

import java.util.Collection;
import java.util.Collections;
import java.util.Map;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import com.example.board.domain.member.Member;
import lombok.Getter;


@Getter
public class CustomUserDetails implements UserDetails {

    private static final long serialVersionUID = 1L;
    private final Member member;

    // 일반 로그인 생성자
    public CustomUserDetails(Member member) {
        this.member = member;
    }

    @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
       
        return Collections.singletonList(new SimpleGrantedAuthority(member.getRole().getKey()));
    }
    
    @Override public String getPassword() { return member.getPassword(); }
    @Override public String getUsername() { return member.getEmail(); } // Spring Security의 username으로 email 사용
    @Override public boolean isAccountNonExpired() { return true; }
    @Override public boolean isAccountNonLocked() { return true; }
    @Override public boolean isCredentialsNonExpired() { return true; }
    @Override public boolean isEnabled() { return true; }
}
