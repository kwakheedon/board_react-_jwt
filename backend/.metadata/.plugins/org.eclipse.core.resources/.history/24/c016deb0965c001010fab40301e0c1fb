package com.example.board.domain.post;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.example.board.domain.member.Member;
import com.example.board.domain.member.MemberRepository;
import com.example.board.domain.post.dto.PostReq;
import com.example.board.exception.CustomException;
import com.example.board.exception.ErrorCode;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class PostService {
	private final PostRepository postRepository;
	private final MemberRepository memberRepository;
	
	// 개시글 생성
	@Transactional
	public Long createPost(PostReq postReq, String email) {

		// .작성자 정보 조회, JWT필터안에 email로 조회 
		Member member = memberRepository.findByEmail(email)
				.orElseThrow(() -> new CustomException(ErrorCode.USER_NOT_FOUND, "해당 사용자를 찾을 수 없습니다."));
		// .게시글 엔티티 생성
		Post post = Post.builder().title(postReq.getTitle()).content(postReq.getContent()).member(member) 																			// 작성자는 누구인가)
				.build();
		
		Post savedPost = postRepository.save(post);

		// .생성된 게시글의 ID 반환
		return savedPost.getId();
	}
	

	
}
